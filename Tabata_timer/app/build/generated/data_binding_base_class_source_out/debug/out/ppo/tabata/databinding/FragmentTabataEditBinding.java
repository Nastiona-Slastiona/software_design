// Generated by view binder compiler. Do not edit!
package ppo.tabata.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ppo.tabata.R;

public final class FragmentTabataEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final LinearLayout buttonSaveLayout;

  @NonNull
  public final EditText cooldownMin;

  @NonNull
  public final EditText cooldownS;

  @NonNull
  public final EditText cycles;

  @NonNull
  public final EditText repeats;

  @NonNull
  public final EditText restMin;

  @NonNull
  public final EditText restS;

  @NonNull
  public final AppCompatButton selectColor;

  @NonNull
  public final EditText tabataTitle;

  @NonNull
  public final TableLayout table;

  @NonNull
  public final EditText warmUpMin;

  @NonNull
  public final EditText warmUpS;

  @NonNull
  public final EditText workMin;

  @NonNull
  public final EditText workS;

  private FragmentTabataEditBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonSave,
      @NonNull LinearLayout buttonSaveLayout, @NonNull EditText cooldownMin,
      @NonNull EditText cooldownS, @NonNull EditText cycles, @NonNull EditText repeats,
      @NonNull EditText restMin, @NonNull EditText restS, @NonNull AppCompatButton selectColor,
      @NonNull EditText tabataTitle, @NonNull TableLayout table, @NonNull EditText warmUpMin,
      @NonNull EditText warmUpS, @NonNull EditText workMin, @NonNull EditText workS) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.buttonSaveLayout = buttonSaveLayout;
    this.cooldownMin = cooldownMin;
    this.cooldownS = cooldownS;
    this.cycles = cycles;
    this.repeats = repeats;
    this.restMin = restMin;
    this.restS = restS;
    this.selectColor = selectColor;
    this.tabataTitle = tabataTitle;
    this.table = table;
    this.warmUpMin = warmUpMin;
    this.warmUpS = warmUpS;
    this.workMin = workMin;
    this.workS = workS;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTabataEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTabataEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tabata_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTabataEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_save;
      Button buttonSave = rootView.findViewById(id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.button_save_layout;
      LinearLayout buttonSaveLayout = rootView.findViewById(id);
      if (buttonSaveLayout == null) {
        break missingId;
      }

      id = R.id.cooldown_min;
      EditText cooldownMin = rootView.findViewById(id);
      if (cooldownMin == null) {
        break missingId;
      }

      id = R.id.cooldown_s;
      EditText cooldownS = rootView.findViewById(id);
      if (cooldownS == null) {
        break missingId;
      }

      id = R.id.cycles;
      EditText cycles = rootView.findViewById(id);
      if (cycles == null) {
        break missingId;
      }

      id = R.id.repeats;
      EditText repeats = rootView.findViewById(id);
      if (repeats == null) {
        break missingId;
      }

      id = R.id.rest_min;
      EditText restMin = rootView.findViewById(id);
      if (restMin == null) {
        break missingId;
      }

      id = R.id.rest_s;
      EditText restS = rootView.findViewById(id);
      if (restS == null) {
        break missingId;
      }

      id = R.id.select_color;
      AppCompatButton selectColor = rootView.findViewById(id);
      if (selectColor == null) {
        break missingId;
      }

      id = R.id.tabata_title;
      EditText tabataTitle = rootView.findViewById(id);
      if (tabataTitle == null) {
        break missingId;
      }

      id = R.id.table;
      TableLayout table = rootView.findViewById(id);
      if (table == null) {
        break missingId;
      }

      id = R.id.warm_up_min;
      EditText warmUpMin = rootView.findViewById(id);
      if (warmUpMin == null) {
        break missingId;
      }

      id = R.id.warm_up_s;
      EditText warmUpS = rootView.findViewById(id);
      if (warmUpS == null) {
        break missingId;
      }

      id = R.id.work_min;
      EditText workMin = rootView.findViewById(id);
      if (workMin == null) {
        break missingId;
      }

      id = R.id.work_s;
      EditText workS = rootView.findViewById(id);
      if (workS == null) {
        break missingId;
      }

      return new FragmentTabataEditBinding((ConstraintLayout) rootView, buttonSave,
          buttonSaveLayout, cooldownMin, cooldownS, cycles, repeats, restMin, restS, selectColor,
          tabataTitle, table, warmUpMin, warmUpS, workMin, workS);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
