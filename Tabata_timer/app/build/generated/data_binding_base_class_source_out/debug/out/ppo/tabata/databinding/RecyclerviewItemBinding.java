// Generated by view binder compiler. Do not edit!
package ppo.tabata.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ppo.tabata.R;

public final class RecyclerviewItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView cycles;

  @NonNull
  public final ImageButton deleteButton;

  @NonNull
  public final LinearLayout info;

  @NonNull
  public final View itemColor;

  @NonNull
  public final ImageButton playButton;

  @NonNull
  public final TextView reps;

  @NonNull
  public final TextView rest;

  @NonNull
  public final CardView tabataItemView;

  @NonNull
  public final LinearLayout textContent;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView work;

  private RecyclerviewItemBinding(@NonNull LinearLayout rootView, @NonNull TextView cycles,
      @NonNull ImageButton deleteButton, @NonNull LinearLayout info, @NonNull View itemColor,
      @NonNull ImageButton playButton, @NonNull TextView reps, @NonNull TextView rest,
      @NonNull CardView tabataItemView, @NonNull LinearLayout textContent,
      @NonNull TextView textView, @NonNull TextView work) {
    this.rootView = rootView;
    this.cycles = cycles;
    this.deleteButton = deleteButton;
    this.info = info;
    this.itemColor = itemColor;
    this.playButton = playButton;
    this.reps = reps;
    this.rest = rest;
    this.tabataItemView = tabataItemView;
    this.textContent = textContent;
    this.textView = textView;
    this.work = work;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerviewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerviewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerview_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerviewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cycles;
      TextView cycles = rootView.findViewById(id);
      if (cycles == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      ImageButton deleteButton = rootView.findViewById(id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.info;
      LinearLayout info = rootView.findViewById(id);
      if (info == null) {
        break missingId;
      }

      id = R.id.itemColor;
      View itemColor = rootView.findViewById(id);
      if (itemColor == null) {
        break missingId;
      }

      id = R.id.playButton;
      ImageButton playButton = rootView.findViewById(id);
      if (playButton == null) {
        break missingId;
      }

      id = R.id.reps;
      TextView reps = rootView.findViewById(id);
      if (reps == null) {
        break missingId;
      }

      id = R.id.rest;
      TextView rest = rootView.findViewById(id);
      if (rest == null) {
        break missingId;
      }

      id = R.id.tabataItemView;
      CardView tabataItemView = rootView.findViewById(id);
      if (tabataItemView == null) {
        break missingId;
      }

      id = R.id.textContent;
      LinearLayout textContent = rootView.findViewById(id);
      if (textContent == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.work;
      TextView work = rootView.findViewById(id);
      if (work == null) {
        break missingId;
      }

      return new RecyclerviewItemBinding((LinearLayout) rootView, cycles, deleteButton, info,
          itemColor, playButton, reps, rest, tabataItemView, textContent, textView, work);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
